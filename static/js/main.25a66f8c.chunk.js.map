{"version":3,"sources":["variables.js","store.js","components/Characters/FilteredBySpecies/FilteredBySpecies.jsx","components/Characters/FilteredByStatus/FilteredByStatus.jsx","components/Characters/FilteredByGender/FilteredByGender.jsx","components/Characters/Characters.jsx","components/Pagination/Pagination.jsx","components/Episodes/TableEpisodes/TableEpisodes.jsx","components/Episodes/Episodes.jsx","components/Locations/LocationsFilterByName/LocationsFilterByName.jsx","components/Locations/LocationsFilterByType/LocationsFilterByType.jsx","components/Locations/LocationsFilterByDimension/LocationsFilterByDimension.jsx","components/Locations/TableLocations/TableLocations.jsx","components/Locations/Locations.jsx","localStorage.js","components/WatchList/List/List.jsx","components/WatchList/WatchList.jsx","api/navigation.js","actionCreators.js","components/Navigation/Navigation.jsx","App.jsx","index.jsx"],"names":["SHOW_CHARACTERS","ALL","HUMAN","HUMANOID","ALIEN","ROBOT","DISEASE","ANIMAL","POOPYBUTTHOLE","ALIVE","DEAD","UNKNOWN_STATUS","MALE","FEMALE","UNKNOWN_GENDER","SHOW_EPISODE","SHOW_LOCATIONS","initial","initialState","characters","episodes","locations","store","createStore","state","action","type","payload","filter","character","species","status","gender","useStyles","makeStyles","theme","formControl","margin","spacing","selectEmpty","marginTop","FilteredBySpecies","selectedSpecies","selectSpecies","classes","FormControl","className","Select","labelId","id","value","onChange","MenuItem","FilteredByStatus","selectedStatus","selectStatus","FilteredByGender","selectedGender","selectGender","getModalStyle","position","top","right","transform","popup","width","fontSize","backgroundColor","boxShadow","shadows","padding","outline","Characters","useState","showDetail","setShowDetail","popupStyle","currentCharacter","setCurrentCharacter","showCard","map","role","onClick","data","name","src","image","alt","Modal","open","onClose","aria-labelledby","aria-describedby","style","location","url","origin","Pagination","paginate","pages","pageNumbers","i","push","page","table","border","TableEpisodes","sortName","setSortName","sortedArray","setSortedArray","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","sort","a","b","localeCompare","TableBody","episode","scope","Episodes","undefined","LocationsFilterByName","dimension","LocationsFilterByType","LocationsFilterByDimension","TableLocations","sortType","setSortType","sortDimension","setSortDimension","sortedByName","setSortedByName","sortedByType","setSortedByType","sortedByDimension","setSortedByDimension","Locations","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","console","List","list","removeItem","handleChange","htmlFor","Checkbox","title","checked","defaultChecked","color","inputProps","Button","variant","root","WatchList","uuidv4","addMovie","setAddMovie","setList","nameEpisode","setNameEpisode","noValidate","autoComplete","TextField","label","target","movie","request","options","fetch","then","res","json","results","catch","getCharacter","getEpisode","getLocation","showCharacters","showEpisodes","showLocations","all","Navigation","showCharacter","setShowCharacter","showEpisode","setShowEpisode","showLocation","setShowLocation","showWatchList","setShowWatchList","setSelectedSpecies","setSelectedStatus","setSelectedGender","currentPage","setCurrentPage","useSelector","dispatch","useDispatch","human","humanoid","alien","robot","disease","animal","poopybutthole","alive","dead","unknownStatus","male","female","unknownGender","pageNumber","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25a66f8c.chunk.js","sourcesContent":["// For Characters species\nexport const SHOW_CHARACTERS = 'SHOW_CHARACTERS';\nexport const ALL = 'ALL';\nexport const HUMAN = 'HUMAN';\nexport const HUMANOID = 'HUMANOID';\nexport const ALIEN = 'ALIEN';\nexport const ROBOT = 'ROBOT';\nexport const DISEASE = 'DISEASE';\nexport const ANIMAL = 'ANIMAL';\nexport const POOPYBUTTHOLE = 'POOPYBUTTHOLE';\n\n// For Characters status\nexport const ALIVE = 'ALIVE';\nexport const DEAD = 'DEAD';\nexport const UNKNOWN_STATUS = 'UNKNOWN_STATUS';\n\n// For Characters GENDER\nexport const MALE = 'MALE';\nexport const FEMALE = 'FEMALE';\nexport const UNKNOWN_GENDER = 'UNKNOWN_GENDER';\n\nexport const SHOW_EPISODE = 'SHOW_EPISODE';\nexport const SHOW_LOCATIONS = 'SHOW_LOCATIONS';\n","import { createStore } from 'redux';\n\nimport {\n  SHOW_CHARACTERS,\n  ALL,\n  HUMAN,\n  HUMANOID,\n  ALIEN,\n  ROBOT,\n  DISEASE,\n  ANIMAL,\n  POOPYBUTTHOLE,\n  SHOW_EPISODE,\n  SHOW_LOCATIONS,\n  ALIVE,\n  DEAD,\n  UNKNOWN_STATUS,\n  MALE,\n  FEMALE,\n  UNKNOWN_GENDER,\n} from './variables';\n\nconst initial = [];\n\nconst initialState = {\n  characters: initial,\n  episodes: initial,\n  locations: initial,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SHOW_CHARACTERS:\n      return {\n        ...state,\n        characters: action.payload.characters,\n      };\n\n    case ALL:\n      return {\n        ...state,\n        characters: action.payload.characters,\n      };\n\n    case HUMAN:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Human'),\n      };\n\n    case HUMANOID:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Humanoid'),\n      };\n\n    case ALIEN:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Alien'),\n      };\n\n    case ROBOT:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Robot'),\n      };\n\n    case DISEASE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Disease'),\n      };\n\n    case ANIMAL:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Animal'),\n      };\n\n    case POOPYBUTTHOLE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Poopybutthole'),\n      };\n\n    case ALIVE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.status === 'Alive'),\n      };\n\n    case DEAD:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.status === 'Dead'),\n      };\n\n    case UNKNOWN_STATUS:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.status === 'unknown'),\n      };\n\n    case MALE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.gender === 'Male'),\n      };\n\n    case FEMALE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.gender === 'Female'),\n      };\n\n    case UNKNOWN_GENDER:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.gender === 'unknown'),\n      };\n\n    case SHOW_EPISODE:\n      return {\n        ...state,\n        episodes: action.payload.episodes,\n      };\n\n    case SHOW_LOCATIONS:\n      return {\n        ...state,\n        locations: action.payload.locations,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilteredBySpecies.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const FilteredBySpecies = ({ selectedSpecies, selectSpecies }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <h3 className=\"species__title\">Select filter by species:</h3>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedSpecies}\n        onChange={selectSpecies}\n      >\n        <MenuItem value=\"ALL\">All</MenuItem>\n        <MenuItem value=\"HUMAN\">Human</MenuItem>\n        <MenuItem value=\"HUMANOID\">Humanoid</MenuItem>\n        <MenuItem value=\"ALIEN\">Alien</MenuItem>\n        <MenuItem value=\"ROBOT\">Robot</MenuItem>\n        <MenuItem value=\"DISEASE\">Disease</MenuItem>\n        <MenuItem value=\"ANIMAL\">Animal</MenuItem>\n        <MenuItem value=\"POOPYBUTTHOLE\">Poopybutthole</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nFilteredBySpecies.propTypes = {\n  selectedSpecies: PropTypes.string.isRequired,\n  selectSpecies: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const FilteredByStatus = ({ selectedStatus, selectStatus }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <h3 className=\"species__title\">Select filter by status:</h3>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedStatus}\n        onChange={selectStatus}\n      >\n        <MenuItem value=\"ALL\">All</MenuItem>\n        <MenuItem value=\"ALIVE\">Alive</MenuItem>\n        <MenuItem value=\"DEAD\">Dead</MenuItem>\n        <MenuItem value=\"UNKNOWN_STATUS\">Unknown</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nFilteredByStatus.propTypes = {\n  selectedStatus: PropTypes.string.isRequired,\n  selectStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const FilteredByGender = ({ selectedGender, selectGender }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <h3 className=\"species__title\">Select filter by gender:</h3>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedGender}\n        onChange={selectGender}\n      >\n        <MenuItem value=\"ALL\">All</MenuItem>\n        <MenuItem value=\"MALE\">Male</MenuItem>\n        <MenuItem value=\"FEMALE\">Female</MenuItem>\n        <MenuItem value=\"UNKNOWN_GENDER\">Unknown</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nFilteredByGender.propTypes = {\n  selectedGender: PropTypes.string.isRequired,\n  selectGender: PropTypes.func.isRequired,\n};\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Characters.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction getModalStyle() {\n  return {\n    position: 'absolute',\n    top: '50%',\n    right: '50%',\n    transform: 'translate(50%,-50%)',\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  popup: {\n    position: 'absolute',\n    width: '550px',\n    fontSize: '18px',\n    backgroundColor: 'white',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 0,\n  },\n}));\n\nexport const Characters = ({ characters }) => {\n  const [showDetail, setShowDetail] = useState(false);\n  const [popupStyle] = useState(getModalStyle);\n  const [currentCharacter, setCurrentCharacter] = useState({});\n\n  const showCard = useStyles();\n\n  const handleOpen = (data) => {\n    setShowDetail(true);\n    setCurrentCharacter(data);\n  };\n\n  const handleClose = () => {\n    setShowDetail(false);\n  };\n\n  return (\n    <ul className=\"characters__card\">\n      {\n        characters.map((character) => (\n          <li\n            className=\"card\"\n            key={character.id}\n            role=\"button\"\n            onClick={() => handleOpen(character)}\n          >\n            <h3>{`Name - ${character.name}`}</h3>\n            <p>{`Species - ${character.species}`}</p>\n            <p>{`Status - ${character.status}`}</p>\n            <p>{`Gender - ${character.gender}`}</p>\n            <img src={`${character.image}`} alt=\"character\" />\n        </li>\n        ))\n      }\n      {\n        showDetail\n        ? (\n          <div>\n            <Modal\n              open={showDetail}\n              onClose={handleClose}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n            >\n              <div className={showCard.popup} style={popupStyle}>\n                <h2>{`Name - ${currentCharacter.name}`}</h2>\n                <p>{`Species - ${currentCharacter.species}`}</p>\n                <p>{`Status - ${currentCharacter.status}`}</p>\n                <p>{`Gender - ${currentCharacter.gender}`}</p>\n                <p>{`Location name - ${currentCharacter.location.name}`}</p>\n                <p>{`Location url - ${currentCharacter.location.url}`}</p>\n                <p>{`Origin name - ${currentCharacter.origin.name}`}</p>\n                <p>{`Origin url - ${currentCharacter.origin.url}`}</p>\n                <img src={`${currentCharacter.image}`} alt=\"character\" />\n              </div>\n            </Modal>\n          </div>\n        )\n        : ''\n      }\n    </ul>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      species: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      gender: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Pagination.css';\n\nexport const Pagination = ({ paginate, pages }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= pages; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {\n          pageNumbers.map((page) => (\n            <li key={page} className=\"pagination__item\">\n              <button\n                type=\"button\"\n                onClick={() => paginate(page)}\n                className=\"ui positive basic button\"\n              >\n                {page}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  paginate: PropTypes.func.isRequired,\n  pages: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TableEpisodes.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '800px',\n    border: '2px dashed #ccc',\n    margin: '0 auto',\n  },\n});\n\nexport const TableEpisodes = ({ episodes }) => {\n  const classes = useStyles();\n  const [sortName, setSortName] = useState(false);\n  const [sortedArray, setSortedArray] = useState(episodes);\n\n  const sortByName = () => {\n    setSortName((state) => !state);\n    setSortedArray([...episodes].sort((a, b) => a.name.localeCompare(b.name)));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"table__name\" onClick={sortByName}>Name</TableCell>\n            <TableCell>Episode</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            sortName\n              ? (\n                sortedArray.map((episode) => (\n                  <TableRow key={episode.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.name}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.episode}\n                    </TableCell>\n                  </TableRow>\n                ))\n              )\n              : (\n                episodes.map((episode) => (\n                  <TableRow key={episode.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.name}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.episode}\n                    </TableCell>\n                  </TableRow>\n                ))\n              )\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nTableEpisodes.propTypes = {\n  episodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      episode: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Episode.css';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { TableEpisodes } from './TableEpisodes/TableEpisodes';\n\nexport const Episodes = ({ episodes, paginate }) => {\n  const LENGTH_OF_EPISODES = 3;\n\n  return (\n    <div className=\"episodes\">\n      {\n        (episodes === undefined)\n          ? <div className=\"episode__error\">There is no data here</div>\n          : <TableEpisodes episodes={episodes} />\n      }\n      <Pagination pages={LENGTH_OF_EPISODES} paginate={paginate} />\n    </div>\n  );\n};\n\nEpisodes.propTypes = {\n  episodes: PropTypes.arrayOf().isRequired,\n  paginate: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const LocationsFilterByName = ({ sortedArray }) => (\n  sortedArray.map((location) => (\n    <TableRow key={location.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.id}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.type}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.dimension}\n      </TableCell>\n    </TableRow>\n  ))\n);\n\nLocationsFilterByName.propTypes = {\n  sortedArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const LocationsFilterByType = ({ sortedArray }) => (\n  sortedArray.map((location) => (\n    <TableRow key={location.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.id}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.type}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.dimension}\n      </TableCell>\n    </TableRow>\n  ))\n);\n\nLocationsFilterByType.propTypes = {\n  sortedArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const LocationsFilterByDimension = ({ sortedArray }) => (\n  sortedArray.map((location) => (\n    <TableRow key={location.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.id}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.type}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.dimension}\n      </TableCell>\n    </TableRow>\n  ))\n);\n\nLocationsFilterByDimension.propTypes = {\n  sortedArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TableLocations.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { LocationsFilterByName } from '../LocationsFilterByName/LocationsFilterByName';\nimport { LocationsFilterByType } from '../LocationsFilterByType/LocationsFilterByType';\nimport { LocationsFilterByDimension } from '../LocationsFilterByDimension/LocationsFilterByDimension';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '800px',\n    border: '2px dashed #ccc',\n    margin: '0 auto',\n  },\n});\n\nexport const TableLocations = ({ locations }) => {\n  const classes = useStyles();\n  const [sortName, setSortName] = useState(false);\n  const [sortType, setSortType] = useState(false);\n  const [sortDimension, setSortDimension] = useState(false);\n  const [sortedByName, setSortedByName] = useState(locations);\n  const [sortedByType, setSortedByType] = useState(locations);\n  const [sortedByDimension, setSortedByDimension] = useState(locations);\n\n  const sortByName = () => {\n    setSortedByType(locations);\n    setSortedByDimension(locations);\n    setSortName((state) => !state);\n    setSortedByName([...locations].sort((a, b) => a.name.localeCompare(b.name)));\n  };\n\n  const sortByType = () => {\n    setSortedByDimension(locations);\n    setSortedByName(locations);\n    setSortType((state) => !state);\n    setSortedByType([...locations].sort((a, b) => a.type.localeCompare(b.type)));\n  };\n\n  const sortByDimension = () => {\n    setSortedByName(locations);\n    setSortedByType(locations);\n    setSortDimension((state) => !state);\n    setSortedByDimension([...locations].sort((a, b) => a.dimension.localeCompare(b.dimension)));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"table__number\">№</TableCell>\n            <TableCell className=\"table__name\" onClick={sortByName}>Name</TableCell>\n            <TableCell className=\"table__type\" onClick={sortByType}>Type</TableCell>\n            <TableCell className=\"table__dimension\" onClick={sortByDimension}>Dimension</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            (sortName === false && sortType === false && sortDimension === false) && (\n              locations.map((location) => (\n                <TableRow key={location.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.id}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.name}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.type}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.dimension}\n                  </TableCell>\n                </TableRow>\n              )))\n          }\n          {\n            sortName && <LocationsFilterByName sortedArray={sortedByName} />\n          }\n          {\n            sortType && <LocationsFilterByType sortedArray={sortedByType} />\n          }\n          {\n            sortDimension && <LocationsFilterByDimension sortedArray={sortedByDimension} />\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nTableLocations.propTypes = {\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { TableLocations } from './TableLocations/TableLocations';\n\nexport const Locations = ({ locations, paginate }) => {\n  const PAGES = 6;\n  return (\n    <div className=\"episodes\">\n      {\n        (locations === undefined)\n          ? <div className=\"episode__error\">There is no data here</div>\n          : <TableLocations locations={locations} />\n      }\n      <Pagination pages={PAGES} paginate={paginate} />\n    </div>\n  );\n};\n\nLocations.propTypes = {\n  locations: PropTypes.arrayOf().isRequired,\n  paginate: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './List.css';\n\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const List = ({ list, removeItem, handleChange }) => (\n  <ul className=\"watch__list\">\n    {\n      list.map((item) => (\n        <li key={item.id} className=\"watch__item\">\n          <label htmlFor=\"checkbox\" className=\"watch__label\">\n            <Checkbox\n              value={item.title}\n              checked={item.checked}\n              onChange={() => handleChange(item.id)}\n              defaultChecked\n              color=\"primary\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n            <p className={`watch__name ${item.checked} ? checked : ''`}>\n              {item.title}\n            </p>\n          </label>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => removeItem(item)}>\n            Remove\n          </Button>\n        </li>\n      ))\n    }\n  </ul>\n);\n\nList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      checked: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","/* eslint global-require: \"error\" */\n/* eslint no-shadow: \"error\" */\n/* eslint no-param-reassign: \"error\" */\nimport React, { useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport useLocalStorage from '../../localStorage';\n\nimport { List } from './List/List';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport const WatchList = () => {\n  const classes = useStyles();\n  const id = uuidv4();\n\n  const [addMovie, setAddMovie] = useState(false);\n  const [list, setList] = useLocalStorage('data', []);\n  const [nameEpisode, setNameEpisode] = useState('');\n\n  const createList = ({ target }) => {\n    if (target.value !== '') {\n      setNameEpisode(target.value);\n    }\n  };\n\n  const addItem = () => {\n    setAddMovie(true);\n    if (nameEpisode !== '') {\n      setList([\n        ...list,\n        {\n          id,\n          title: nameEpisode,\n          checked: false,\n        }]);\n      setNameEpisode('');\n    }\n  };\n\n  const removeItem = (item) => {\n    setList(list.filter((movie) => movie !== item));\n  };\n\n  // eslint-disable-next-line no-shadow\n  const handleChange = (id) => {\n    setAddMovie(true);\n    // eslint-disable-next-line array-callback-return\n    list.map((item) => {\n      if (item.id === id) {\n        item.checked = true;\n      }\n    });\n    setList(list);\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField id=\"standard-basic\" label=\"New Episode\" value={nameEpisode} onChange={createList} />\n      <Button variant=\"outlined\" onClick={addItem}>Add</Button>\n      {\n        addMovie && (<List list={list} removeItem={removeItem} handleChange={handleChange} />)\n      }\n    </form>\n  );\n};\n","const BASE_URL = 'https://rickandmortyapi.com/api/';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((res) => res.json())\n  .then((data) => data.results)\n  .catch((error) => error);\n\nexport const getCharacter = (page) => request(`character/?page=${page}`);\nexport const getEpisode = (page) => request(`episode/?page=${page}`);\nexport const getLocation = (page) => request(`location/?page=${page}`);\n","import {\n  SHOW_CHARACTERS,\n  ALL,\n  HUMAN,\n  HUMANOID,\n  ALIEN,\n  ROBOT,\n  DISEASE,\n  ANIMAL,\n  POOPYBUTTHOLE,\n  SHOW_EPISODE,\n  SHOW_LOCATIONS,\n  ALIVE,\n  DEAD,\n  UNKNOWN_STATUS,\n  MALE,\n  FEMALE,\n  UNKNOWN_GENDER,\n} from './variables';\n\nexport function showCharacters(data) {\n  return {\n    type: SHOW_CHARACTERS,\n    payload: { characters: data },\n  };\n}\n\nexport function showEpisodes(data) {\n  return {\n    type: SHOW_EPISODE,\n    payload: { episodes: data },\n  };\n}\n\nexport function showLocations(data) {\n  return {\n    type: SHOW_LOCATIONS,\n    payload: { locations: data },\n  };\n}\n\n// Select species\nexport function all(data) {\n  return {\n    type: ALL,\n    payload: { characters: data },\n  };\n}\n\nexport function human(data) {\n  return {\n    type: HUMAN,\n    payload: { characters: data },\n  };\n}\n\nexport function humanoid(data) {\n  return {\n    type: HUMANOID,\n    payload: { characters: data },\n  };\n}\n\nexport function alien(data) {\n  return {\n    type: ALIEN,\n    payload: { characters: data },\n  };\n}\n\nexport function robot(data) {\n  return {\n    type: ROBOT,\n    payload: { characters: data },\n  };\n}\n\nexport function disease(data) {\n  return {\n    type: DISEASE,\n    payload: { characters: data },\n  };\n}\n\nexport function animal(data) {\n  return {\n    type: ANIMAL,\n    payload: { characters: data },\n  };\n}\n\nexport function poopybutthole(data) {\n  return {\n    type: POOPYBUTTHOLE,\n    payload: { characters: data },\n  };\n}\n\n// Select gender\nexport function male(data) {\n  return {\n    type: MALE,\n    payload: { characters: data },\n  };\n}\n\nexport function female(data) {\n  return {\n    type: FEMALE,\n    payload: { characters: data },\n  };\n}\n\nexport function unknownGender(data) {\n  return {\n    type: UNKNOWN_GENDER,\n    payload: { characters: data },\n  };\n}\n// Select status\nexport function alive(data) {\n  return {\n    type: ALIVE,\n    payload: { characters: data },\n  };\n}\n\nexport function dead(data) {\n  return {\n    type: DEAD,\n    payload: { characters: data },\n  };\n}\n\nexport function unknownStatus(data) {\n  return {\n    type: UNKNOWN_STATUS,\n    payload: { characters: data },\n  };\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Navigation.css';\n\nimport { FilteredBySpecies } from '../Characters/FilteredBySpecies/FilteredBySpecies';\nimport { FilteredByStatus } from '../Characters/FilteredByStatus/FilteredByStatus';\nimport { FilteredByGender } from '../Characters/FilteredByGender/FilteredByGender';\nimport { Characters } from '../Characters/Characters';\nimport { Pagination } from '../Pagination/Pagination';\nimport { Episodes } from '../Episodes/Episodes';\nimport { Locations } from '../Locations/Locations';\nimport { WatchList } from '../WatchList/WatchList';\n\nimport { getCharacter, getEpisode, getLocation } from '../../api/navigation';\nimport {\n  showCharacters,\n  showEpisodes,\n  showLocations,\n  all,\n  human,\n  humanoid,\n  alien,\n  robot,\n  disease,\n  animal,\n  poopybutthole,\n  alive,\n  dead,\n  unknownStatus,\n  male,\n  female,\n  unknownGender,\n} from '../../actionCreators';\n\nimport {\n  ALL,\n  HUMAN,\n  HUMANOID,\n  ALIEN,\n  ROBOT,\n  DISEASE,\n  ANIMAL,\n  POOPYBUTTHOLE,\n  ALIVE,\n  DEAD,\n  UNKNOWN_STATUS,\n  MALE,\n  FEMALE,\n  UNKNOWN_GENDER,\n} from '../../variables';\n\nexport const Navigation = () => {\n  const [showCharacter, setShowCharacter] = useState(false);\n  const [showEpisode, setShowEpisode] = useState(false);\n  const [showLocation, setShowLocation] = useState(false);\n  const [showWatchList, setShowWatchList] = useState(false);\n\n  const [selectedSpecies, setSelectedSpecies] = useState('all');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [selectedGender, setSelectedGender] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const characters = useSelector((state) => state.characters);\n  const episodes = useSelector((state) => state.episodes);\n  const locations = useSelector((state) => state.locations);\n  const dispatch = useDispatch();\n\n  const LENGTH_OF_CHARACTERS = 34;\n\n  // Paginate for Characters\n  const paginateForCharacters = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    setSelectedStatus('all');\n    setSelectedSpecies('all');\n    setSelectedGender('all');\n    getCharacter(currentPage)\n      .then((data) => {\n        dispatch(showCharacters(data));\n      });\n  };\n\n  // Paginate for Episode\n  const paginateForEpisodes = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    getEpisode(currentPage)\n      .then((data) => {\n        dispatch(showEpisodes(data));\n      });\n  };\n\n  const paginateForLocations = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    getLocation(currentPage)\n      .then((data) => {\n        dispatch(showLocations(data));\n      });\n  };\n\n  // Filter fields for Characters\n  const selectSpecies = ({ target }) => {\n    setSelectedSpecies(target.value);\n    setSelectedStatus(selectedStatus);\n    setSelectedGender(selectedGender);\n    getCharacter(currentPage)\n      .then((data) => {\n        switch (target.value) {\n          case ALL:\n            dispatch(all(data));\n            break;\n\n          case HUMAN:\n            dispatch(human(data));\n            break;\n\n          case HUMANOID:\n            dispatch(humanoid(data));\n            break;\n\n          case ALIEN:\n            dispatch(alien(data));\n            break;\n\n          case ROBOT:\n            dispatch(robot(data));\n            break;\n\n          case DISEASE:\n            dispatch(disease(data));\n            break;\n\n          case ANIMAL:\n            dispatch(animal(data));\n            break;\n\n          case POOPYBUTTHOLE:\n            dispatch(poopybutthole(data));\n            break;\n\n          default:\n            dispatch(all(data));\n            break;\n        }\n      });\n  };\n\n  const selectStatus = ({ target }) => {\n    setSelectedStatus(target.value);\n    setSelectedSpecies(selectedSpecies);\n    setSelectedGender(selectedGender);\n    getCharacter(currentPage)\n      .then((data) => {\n        switch (target.value) {\n          case ALL:\n            dispatch(all(data));\n            break;\n\n          case ALIVE:\n            dispatch(alive(data));\n            break;\n\n          case DEAD:\n            dispatch(dead(data));\n            break;\n\n          case UNKNOWN_STATUS:\n            dispatch(unknownStatus(data));\n            break;\n\n          default:\n            dispatch(all(data));\n            break;\n        }\n      });\n  };\n\n  const selectGender = ({ target }) => {\n    setSelectedGender(target.value);\n    setSelectedSpecies(selectedSpecies);\n    setSelectedStatus(selectedStatus);\n    getCharacter(currentPage)\n      .then((data) => {\n        switch (target.value) {\n          case ALL:\n            dispatch(all(data));\n            break;\n\n          case MALE:\n            dispatch(male(data));\n            break;\n\n          case FEMALE:\n            dispatch(female(data));\n            break;\n\n          case UNKNOWN_GENDER:\n            dispatch(unknownGender(data));\n            break;\n\n          default:\n            dispatch(all(data));\n            break;\n        }\n      });\n  };\n\n  const listOfCharacters = () => {\n    setShowCharacter(true);\n    setShowEpisode(false);\n    setShowLocation(false);\n    setShowWatchList(false);\n    getCharacter(currentPage)\n      .then((data) => {\n        dispatch(showCharacters(data));\n      });\n  };\n\n  const tableEpisode = () => {\n    setShowEpisode(true);\n    setShowCharacter(false);\n    setShowLocation(false);\n    setShowWatchList(false);\n    getEpisode(currentPage)\n      .then((data) => {\n        dispatch(showEpisodes(data));\n      });\n  };\n\n  const tableLocation = () => {\n    setShowLocation(true);\n    setShowEpisode(false);\n    setShowCharacter(false);\n    setShowWatchList(false);\n    getLocation(currentPage)\n      .then((data) => {\n        dispatch(showLocations(data));\n      });\n  };\n\n  const watchList = () => {\n    setShowWatchList(true);\n    setShowLocation(false);\n    setShowEpisode(false);\n    setShowCharacter(false);\n  };\n\n  return (\n    <>\n      <nav className=\"ui fluid four item menu\">\n        <button\n          type=\"button\"\n          onClick={listOfCharacters}\n          className=\"item\"\n        >\n          Characters\n        </button>\n        <button\n          type=\"button\"\n          onClick={tableEpisode}\n          className=\"item\"\n        >\n          Episodes\n        </button>\n        <button\n          type=\"button\"\n          onClick={tableLocation}\n          className=\"item\"\n        >\n          Locations\n        </button>\n        <button\n          type=\"button\"\n          onClick={watchList}\n          className=\"item\"\n        >\n          My watch list\n        </button>\n      </nav>\n\n      {\n        showCharacter && (\n          <div className=\"characters\">\n            <div className=\"characters__filter\">\n              <FilteredBySpecies selectedSpecies={selectedSpecies} selectSpecies={selectSpecies} />\n              <FilteredByStatus selectedStatus={selectedStatus} selectStatus={selectStatus} />\n              <FilteredByGender selectedGender={selectedGender} selectGender={selectGender} />\n            </div>\n            <Characters characters={characters} />\n\n            <Pagination pages={LENGTH_OF_CHARACTERS} paginate={paginateForCharacters} />\n          </div>\n        )\n      }\n      {\n        showEpisode && (\n          <Episodes episodes={episodes} paginate={paginateForEpisodes} />\n        )\n      }\n      {\n        showLocation && (\n          <Locations\n            locations={locations}\n            paginate={paginateForLocations}\n          />\n        )\n      }\n      {\n        showWatchList && <WatchList />\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigation } from './components/Navigation/Navigation';\n\nconst App = () => (\n  <Navigation />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}