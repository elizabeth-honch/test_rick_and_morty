{"version":3,"sources":["variables.js","store.js","components/Characters/FilteredBySpecies/FilteredBySpecies.jsx","components/Characters/FilteredByStatus/FilteredByStatus.jsx","components/Characters/FilteredByGender/FilteredByGender.jsx","components/Characters/Characters.jsx","components/Pagination/Pagination.jsx","components/Episodes/TableEpisodes/TableEpisodes.jsx","components/Episodes/Episodes.jsx","components/Locations/LocationsFilterByName/LocationsFilterByName.jsx","components/Locations/LocationsFilterByType/LocationsFilterByType.jsx","components/Locations/LocationsFilterByDimension/LocationsFilterByDimension.jsx","components/Locations/TableLocations/TableLocations.jsx","components/Locations/Locations.jsx","localStorage.js","components/WatchList/List/List.jsx","components/WatchList/WatchList.jsx","api/navigation.js","actionCreators.js","components/Navigation/Navigation.jsx","App.jsx","index.jsx"],"names":["SHOW_CHARACTERS","ALL","HUMAN","HUMANOID","ALIEN","ROBOT","DISEASE","ANIMAL","POOPYBUTTHOLE","ALIVE","DEAD","UNKNOWN_STATUS","MALE","FEMALE","UNKNOWN_GENDER","SHOW_EPISODE","SHOW_LOCATIONS","initial","initialState","characters","episodes","locations","store","createStore","state","action","type","payload","filter","character","species","status","gender","useStyles","makeStyles","theme","formControl","margin","spacing","FilteredBySpecies","selectedSpecies","selectSpecies","classes","FormControl","className","Select","labelId","id","value","onChange","MenuItem","selectEmpty","marginTop","FilteredByStatus","selectedStatus","selectStatus","FilteredByGender","selectedGender","selectGender","getModalStyle","position","top","right","transform","popup","width","fontSize","backgroundColor","boxShadow","shadows","padding","outline","Characters","useState","showDetail","setShowDetail","popupStyle","currentCharacter","setCurrentCharacter","showCard","map","role","onClick","data","name","src","image","alt","Modal","open","onClose","aria-labelledby","aria-describedby","style","location","url","origin","Pagination","paginate","pages","pageNumbers","i","push","page","table","border","TableEpisodes","sortName","setSortName","sortedArray","setSortedArray","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","sort","a","b","localeCompare","TableBody","episode","scope","Episodes","undefined","defaultProps","LocationsFilterByName","dimension","LocationsFilterByType","LocationsFilterByDimension","TableLocations","sortType","setSortType","sortDimension","setSortDimension","sortedByName","setSortedByName","sortedByType","setSortedByType","sortedByDimension","setSortedByDimension","Locations","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","console","List","list","removeItem","handleChange","htmlFor","Checkbox","title","checked","defaultChecked","color","inputProps","Button","variant","root","WatchList","setList","nameEpisode","setNameEpisode","noValidate","autoComplete","TextField","label","target","uuidv4","movie","newList","request","options","fetch","then","res","json","results","catch","getCharacter","getEpisode","getLocation","showCharacters","showEpisodes","showLocations","all","marginRight","flexGrow","cursor","selected","Navigation","showCharacter","setShowCharacter","showEpisode","setShowEpisode","showLocation","setShowLocation","showWatchList","setShowWatchList","setSelectedSpecies","setSelectedStatus","setSelectedGender","useSelector","dispatch","useDispatch","AppBar","Toolbar","Typography","human","humanoid","alien","robot","disease","animal","poopybutthole","alive","dead","unknownStatus","male","female","unknownGender","pageNumber","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af4df590.chunk.js","sourcesContent":["// For Characters species\nexport const SHOW_CHARACTERS = 'SHOW_CHARACTERS';\nexport const ALL = 'ALL';\nexport const HUMAN = 'HUMAN';\nexport const HUMANOID = 'HUMANOID';\nexport const ALIEN = 'ALIEN';\nexport const ROBOT = 'ROBOT';\nexport const DISEASE = 'DISEASE';\nexport const ANIMAL = 'ANIMAL';\nexport const POOPYBUTTHOLE = 'POOPYBUTTHOLE';\n\n// For Characters status\nexport const ALIVE = 'ALIVE';\nexport const DEAD = 'DEAD';\nexport const UNKNOWN_STATUS = 'UNKNOWN_STATUS';\n\n// For Characters GENDER\nexport const MALE = 'MALE';\nexport const FEMALE = 'FEMALE';\nexport const UNKNOWN_GENDER = 'UNKNOWN_GENDER';\n\nexport const SHOW_EPISODE = 'SHOW_EPISODE';\nexport const SHOW_LOCATIONS = 'SHOW_LOCATIONS';\n","import { createStore } from 'redux';\n\nimport {\n  SHOW_CHARACTERS,\n  ALL,\n  HUMAN,\n  HUMANOID,\n  ALIEN,\n  ROBOT,\n  DISEASE,\n  ANIMAL,\n  POOPYBUTTHOLE,\n  SHOW_EPISODE,\n  SHOW_LOCATIONS,\n  ALIVE,\n  DEAD,\n  UNKNOWN_STATUS,\n  MALE,\n  FEMALE,\n  UNKNOWN_GENDER,\n} from './variables';\n\nconst initial = [];\n\nconst initialState = {\n  characters: initial,\n  episodes: initial,\n  locations: initial,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SHOW_CHARACTERS:\n      return {\n        ...state,\n        characters: action.payload.characters,\n      };\n\n    case ALL:\n      return {\n        ...state,\n        characters: action.payload.characters,\n      };\n\n    case HUMAN:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Human'),\n      };\n\n    case HUMANOID:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Humanoid'),\n      };\n\n    case ALIEN:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Alien'),\n      };\n\n    case ROBOT:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Robot'),\n      };\n\n    case DISEASE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Disease'),\n      };\n\n    case ANIMAL:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Animal'),\n      };\n\n    case POOPYBUTTHOLE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.species === 'Poopybutthole'),\n      };\n\n    case ALIVE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.status === 'Alive'),\n      };\n\n    case DEAD:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.status === 'Dead'),\n      };\n\n    case UNKNOWN_STATUS:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.status === 'unknown'),\n      };\n\n    case MALE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.gender === 'Male'),\n      };\n\n    case FEMALE:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.gender === 'Female'),\n      };\n\n    case UNKNOWN_GENDER:\n      return {\n        ...state,\n        characters: action.payload.characters.filter((character) => character.gender === 'unknown'),\n      };\n\n    case SHOW_EPISODE:\n      return {\n        ...state,\n        episodes: action.payload.episodes,\n      };\n\n    case SHOW_LOCATIONS:\n      return {\n        ...state,\n        locations: action.payload.locations,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer, initialState);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FilteredBySpecies.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport const FilteredBySpecies = ({ selectedSpecies, selectSpecies }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <h3 className=\"species__title\">Select filter by species:</h3>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedSpecies}\n        onChange={selectSpecies}\n      >\n        <MenuItem value=\"ALL\">All</MenuItem>\n        <MenuItem value=\"HUMAN\">Human</MenuItem>\n        <MenuItem value=\"HUMANOID\">Humanoid</MenuItem>\n        <MenuItem value=\"ALIEN\">Alien</MenuItem>\n        <MenuItem value=\"ROBOT\">Robot</MenuItem>\n        <MenuItem value=\"DISEASE\">Disease</MenuItem>\n        <MenuItem value=\"ANIMAL\">Animal</MenuItem>\n        <MenuItem value=\"POOPYBUTTHOLE\">Poopybutthole</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nFilteredBySpecies.propTypes = {\n  selectedSpecies: PropTypes.string.isRequired,\n  selectSpecies: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const FilteredByStatus = ({ selectedStatus, selectStatus }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <h3 className=\"species__title\">Select filter by status:</h3>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedStatus}\n        onChange={selectStatus}\n      >\n        <MenuItem value=\"ALL\">All</MenuItem>\n        <MenuItem value=\"ALIVE\">Alive</MenuItem>\n        <MenuItem value=\"DEAD\">Dead</MenuItem>\n        <MenuItem value=\"UNKNOWN_STATUS\">Unknown</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nFilteredByStatus.propTypes = {\n  selectedStatus: PropTypes.string.isRequired,\n  selectStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const FilteredByGender = ({ selectedGender, selectGender }) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <h3 className=\"species__title\">Select filter by gender:</h3>\n      <Select\n        labelId=\"demo-simple-select-label\"\n        id=\"demo-simple-select\"\n        value={selectedGender}\n        onChange={selectGender}\n      >\n        <MenuItem value=\"ALL\">All</MenuItem>\n        <MenuItem value=\"MALE\">Male</MenuItem>\n        <MenuItem value=\"FEMALE\">Female</MenuItem>\n        <MenuItem value=\"UNKNOWN_GENDER\">Unknown</MenuItem>\n      </Select>\n    </FormControl>\n  );\n};\n\nFilteredByGender.propTypes = {\n  selectedGender: PropTypes.string.isRequired,\n  selectGender: PropTypes.func.isRequired,\n};\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Characters.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction getModalStyle() {\n  return {\n    position: 'absolute',\n    top: '50%',\n    right: '50%',\n    transform: 'translate(50%,-50%)',\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  popup: {\n    position: 'absolute',\n    width: '550px',\n    fontSize: '18px',\n    backgroundColor: 'white',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    outline: 0,\n  },\n}));\n\nexport const Characters = ({ characters }) => {\n  const [showDetail, setShowDetail] = useState(false);\n  const [popupStyle] = useState(getModalStyle);\n  const [currentCharacter, setCurrentCharacter] = useState({});\n\n  const showCard = useStyles();\n\n  const handleOpen = (data) => {\n    setShowDetail(true);\n    setCurrentCharacter(data);\n  };\n\n  const handleClose = () => {\n    setShowDetail(false);\n  };\n\n  return (\n    <ul className=\"characters__card\">\n      {\n        characters.map((character) => (\n          <li\n            className=\"card\"\n            key={character.id}\n            role=\"button\"\n            onClick={() => handleOpen(character)}\n          >\n            <div className=\"card__info\">\n              <h3>{`Name - ${character.name}`}</h3>\n              <p>{`Species - ${character.species}`}</p>\n              <p>{`Status - ${character.status}`}</p>\n              <p>{`Gender - ${character.gender}`}</p>\n            </div>\n            <img src={`${character.image}`} alt=\"character\" />\n        </li>\n        ))\n      }\n      {\n        showDetail\n        ? (\n          <Modal\n            open={showDetail}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <div className={showCard.popup} style={popupStyle}>\n              <h2>{`Name - ${currentCharacter.name}`}</h2>\n              <p>{`Species - ${currentCharacter.species}`}</p>\n              <p>{`Status - ${currentCharacter.status}`}</p>\n              <p>{`Gender - ${currentCharacter.gender}`}</p>\n              <p>{`Location name - ${currentCharacter.location.name}`}</p>\n              <p>{`Location url - ${currentCharacter.location.url}`}</p>\n              <p>{`Origin name - ${currentCharacter.origin.name}`}</p>\n              <p>{`Origin url - ${currentCharacter.origin.url}`}</p>\n              <img src={`${currentCharacter.image}`} alt=\"character\" />\n            </div>\n          </Modal>\n        )\n        : ''\n      }\n    </ul>\n  );\n};\n\nCharacters.propTypes = {\n  characters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      species: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      gender: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Pagination.css';\n\nexport const Pagination = ({ paginate, pages }) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= pages; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className=\"pagination\">\n      <ul className=\"pagination__list\">\n        {\n          pageNumbers.map((page) => (\n            <li key={page} className=\"pagination__item\">\n              <button\n                type=\"button\"\n                onClick={() => paginate(page)}\n                className=\"ui positive basic button\"\n              >\n                {page}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  paginate: PropTypes.func.isRequired,\n  pages: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TableEpisodes.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '800px',\n    border: '2px dashed #ccc',\n    margin: '0 auto',\n  },\n});\n\nexport const TableEpisodes = ({ episodes }) => {\n  const classes = useStyles();\n  const [sortName, setSortName] = useState(false);\n  const [sortedArray, setSortedArray] = useState(episodes);\n\n  const sortByName = () => {\n    setSortName((state) => !state);\n    setSortedArray([...episodes].sort((a, b) => a.name.localeCompare(b.name)));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"table__name\" onClick={sortByName}>Name</TableCell>\n            <TableCell>Episode</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            sortName\n              ? (\n                sortedArray.map((episode) => (\n                  <TableRow key={episode.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.name}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.episode}\n                    </TableCell>\n                  </TableRow>\n                ))\n              )\n              : (\n                episodes.map((episode) => (\n                  <TableRow key={episode.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.name}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {episode.episode}\n                    </TableCell>\n                  </TableRow>\n                ))\n              )\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nTableEpisodes.propTypes = {\n  episodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      episode: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Episode.css';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { TableEpisodes } from './TableEpisodes/TableEpisodes';\n\nexport const Episodes = ({ episodes, paginate }) => {\n  const LENGTH_OF_EPISODES = 3;\n\n  return (\n    <div className=\"episodes\">\n      {\n        (episodes === undefined)\n          ? <div className=\"episode__error\">There is no data here</div>\n          : <TableEpisodes episodes={episodes} />\n      }\n      <Pagination pages={LENGTH_OF_EPISODES} paginate={paginate} />\n    </div>\n  );\n};\n\nEpisodes.propTypes = {\n  episodes: PropTypes.arrayOf(Episodes),\n  paginate: PropTypes.func,\n};\n\nEpisodes.defaultProps = {\n  episodes: undefined,\n  paginate: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const LocationsFilterByName = ({ sortedArray }) => (\n  sortedArray.map((location) => (\n    <TableRow key={location.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.id}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.type}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.dimension}\n      </TableCell>\n    </TableRow>\n  ))\n);\n\nLocationsFilterByName.propTypes = {\n  sortedArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const LocationsFilterByType = ({ sortedArray }) => (\n  sortedArray.map((location) => (\n    <TableRow key={location.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.id}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.type}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.dimension}\n      </TableCell>\n    </TableRow>\n  ))\n);\n\nLocationsFilterByType.propTypes = {\n  sortedArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const LocationsFilterByDimension = ({ sortedArray }) => (\n  sortedArray.map((location) => (\n    <TableRow key={location.name}>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.id}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.type}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {location.dimension}\n      </TableCell>\n    </TableRow>\n  ))\n);\n\nLocationsFilterByDimension.propTypes = {\n  sortedArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TableLocations.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { LocationsFilterByName } from '../LocationsFilterByName/LocationsFilterByName';\nimport { LocationsFilterByType } from '../LocationsFilterByType/LocationsFilterByType';\nimport { LocationsFilterByDimension } from '../LocationsFilterByDimension/LocationsFilterByDimension';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '800px',\n    border: '2px dashed #ccc',\n    margin: '0 auto',\n  },\n});\n\nexport const TableLocations = ({ locations }) => {\n  const classes = useStyles();\n  const [sortName, setSortName] = useState(false);\n  const [sortType, setSortType] = useState(false);\n  const [sortDimension, setSortDimension] = useState(false);\n  const [sortedByName, setSortedByName] = useState(locations);\n  const [sortedByType, setSortedByType] = useState(locations);\n  const [sortedByDimension, setSortedByDimension] = useState(locations);\n\n  const sortByName = () => {\n    setSortedByType(locations);\n    setSortedByDimension(locations);\n    setSortName((state) => !state);\n    setSortedByName([...locations].sort((a, b) => a.name.localeCompare(b.name)));\n  };\n\n  const sortByType = () => {\n    setSortedByDimension(locations);\n    setSortedByName(locations);\n    setSortType((state) => !state);\n    setSortedByType([...locations].sort((a, b) => a.type.localeCompare(b.type)));\n  };\n\n  const sortByDimension = () => {\n    setSortedByName(locations);\n    setSortedByType(locations);\n    setSortDimension((state) => !state);\n    setSortedByDimension([...locations].sort((a, b) => a.dimension.localeCompare(b.dimension)));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className=\"table__number\">№</TableCell>\n            <TableCell className=\"table__name\" onClick={sortByName}>Name</TableCell>\n            <TableCell className=\"table__type\" onClick={sortByType}>Type</TableCell>\n            <TableCell className=\"table__dimension\" onClick={sortByDimension}>Dimension</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            (sortName === false && sortType === false && sortDimension === false) && (\n              locations.map((location) => (\n                <TableRow key={location.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.id}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.name}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.type}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {location.dimension}\n                  </TableCell>\n                </TableRow>\n              )))\n          }\n          {\n            sortName && <LocationsFilterByName sortedArray={sortedByName} />\n          }\n          {\n            sortType && <LocationsFilterByType sortedArray={sortedByType} />\n          }\n          {\n            sortDimension && <LocationsFilterByDimension sortedArray={sortedByDimension} />\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nTableLocations.propTypes = {\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      dimension: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Pagination } from '../Pagination/Pagination';\nimport { TableLocations } from './TableLocations/TableLocations';\n\nexport const Locations = ({ locations, paginate }) => {\n  const PAGES = 6;\n  return (\n    <div className=\"episodes\">\n      {\n        (locations === undefined)\n          ? <div className=\"episode__error\">There is no data here</div>\n          : <TableLocations locations={locations} />\n      }\n      <Pagination pages={PAGES} paginate={paginate} />\n    </div>\n  );\n};\n\nLocations.propTypes = {\n  locations: PropTypes.arrayOf(Locations),\n  paginate: PropTypes.func,\n};\n\nLocations.defaultProps = {\n  locations: undefined,\n  paginate: undefined,\n};\n","import { useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './List.css';\n\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport const List = ({ list, removeItem, handleChange }) => (\n  <ul className=\"watch__list\">\n    {\n      list.map((item) => (\n        <li key={item.id} className=\"watch__item\">\n          <label htmlFor=\"checkbox\" className=\"watch__label\">\n            <Checkbox\n              value={item.title}\n              checked={item.checked}\n              onChange={() => handleChange(item.id)}\n              defaultChecked\n              color=\"primary\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n            <p className=\"watch__text\">\n              {item.title}\n            </p>\n          </label>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => removeItem(item)}>\n            Remove\n          </Button>\n        </li>\n      ))\n    }\n  </ul>\n);\n\nList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      checked: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  removeItem: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport useLocalStorage from '../../localStorage';\n\nimport { List } from './List/List';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport const WatchList = () => {\n  const classes = useStyles();\n  const [list, setList] = useLocalStorage('data', []);\n  const [nameEpisode, setNameEpisode] = useState('');\n\n  const createList = ({ target }) => {\n    if (target.value !== '') {\n      setNameEpisode(target.value);\n    }\n  };\n\n  const addItem = () => {\n    if (nameEpisode !== '') {\n      setList([\n        ...list,\n        {\n          id: uuidv4(),\n          title: nameEpisode,\n          checked: false,\n        }]);\n      setNameEpisode('');\n    }\n  };\n\n  const removeItem = (item) => {\n    setList(list.filter((movie) => movie !== item));\n  };\n\n  const handleChange = (id) => {\n    const newList = list.map((item) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          checked: !item.checked,\n        };\n      }\n      return item;\n    });\n    setList(newList);\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField id=\"standard-basic\" label=\"New Episode\" value={nameEpisode} onChange={createList} />\n      <Button variant=\"outlined\" onClick={addItem}>Add</Button>\n      <List list={list} removeItem={removeItem} handleChange={handleChange} />\n    </form>\n  );\n};\n","const BASE_URL = 'https://rickandmortyapi.com/api/';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((res) => res.json())\n  .then((data) => data.results)\n  .catch((error) => error);\n\nexport const getCharacter = (page) => request(`character/?page=${page}`);\nexport const getEpisode = (page) => request(`episode/?page=${page}`);\nexport const getLocation = (page) => request(`location/?page=${page}`);\n","import {\n  SHOW_CHARACTERS,\n  ALL,\n  HUMAN,\n  HUMANOID,\n  ALIEN,\n  ROBOT,\n  DISEASE,\n  ANIMAL,\n  POOPYBUTTHOLE,\n  SHOW_EPISODE,\n  SHOW_LOCATIONS,\n  ALIVE,\n  DEAD,\n  UNKNOWN_STATUS,\n  MALE,\n  FEMALE,\n  UNKNOWN_GENDER,\n} from './variables';\n\nexport function showCharacters(data) {\n  return {\n    type: SHOW_CHARACTERS,\n    payload: { characters: data },\n  };\n}\n\nexport function showEpisodes(data) {\n  return {\n    type: SHOW_EPISODE,\n    payload: { episodes: data },\n  };\n}\n\nexport function showLocations(data) {\n  return {\n    type: SHOW_LOCATIONS,\n    payload: { locations: data },\n  };\n}\n\n// Select species\nexport function all(data) {\n  return {\n    type: ALL,\n    payload: { characters: data },\n  };\n}\n\nexport function human(data) {\n  return {\n    type: HUMAN,\n    payload: { characters: data },\n  };\n}\n\nexport function humanoid(data) {\n  return {\n    type: HUMANOID,\n    payload: { characters: data },\n  };\n}\n\nexport function alien(data) {\n  return {\n    type: ALIEN,\n    payload: { characters: data },\n  };\n}\n\nexport function robot(data) {\n  return {\n    type: ROBOT,\n    payload: { characters: data },\n  };\n}\n\nexport function disease(data) {\n  return {\n    type: DISEASE,\n    payload: { characters: data },\n  };\n}\n\nexport function animal(data) {\n  return {\n    type: ANIMAL,\n    payload: { characters: data },\n  };\n}\n\nexport function poopybutthole(data) {\n  return {\n    type: POOPYBUTTHOLE,\n    payload: { characters: data },\n  };\n}\n\n// Select gender\nexport function male(data) {\n  return {\n    type: MALE,\n    payload: { characters: data },\n  };\n}\n\nexport function female(data) {\n  return {\n    type: FEMALE,\n    payload: { characters: data },\n  };\n}\n\nexport function unknownGender(data) {\n  return {\n    type: UNKNOWN_GENDER,\n    payload: { characters: data },\n  };\n}\n// Select status\nexport function alive(data) {\n  return {\n    type: ALIVE,\n    payload: { characters: data },\n  };\n}\n\nexport function dead(data) {\n  return {\n    type: DEAD,\n    payload: { characters: data },\n  };\n}\n\nexport function unknownStatus(data) {\n  return {\n    type: UNKNOWN_STATUS,\n    payload: { characters: data },\n  };\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Navigation.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { FilteredBySpecies } from '../Characters/FilteredBySpecies/FilteredBySpecies';\nimport { FilteredByStatus } from '../Characters/FilteredByStatus/FilteredByStatus';\nimport { FilteredByGender } from '../Characters/FilteredByGender/FilteredByGender';\nimport { Characters } from '../Characters/Characters';\nimport { Pagination } from '../Pagination/Pagination';\nimport { Episodes } from '../Episodes/Episodes';\nimport { Locations } from '../Locations/Locations';\nimport { WatchList } from '../WatchList/WatchList';\n\nimport { getCharacter, getEpisode, getLocation } from '../../api/navigation';\nimport {\n  showCharacters,\n  showEpisodes,\n  showLocations,\n  all,\n  human,\n  humanoid,\n  alien,\n  robot,\n  disease,\n  animal,\n  poopybutthole,\n  alive,\n  dead,\n  unknownStatus,\n  male,\n  female,\n  unknownGender,\n} from '../../actionCreators';\n\nimport {\n  ALL,\n  HUMAN,\n  HUMANOID,\n  ALIEN,\n  ROBOT,\n  DISEASE,\n  ANIMAL,\n  POOPYBUTTHOLE,\n  ALIVE,\n  DEAD,\n  UNKNOWN_STATUS,\n  MALE,\n  FEMALE,\n  UNKNOWN_GENDER,\n} from '../../variables';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  title: {\n    marginRight: theme.spacing(2),\n    flexGrow: 1,\n    '&:hover': {\n      cursor: 'pointer',\n      color: '#cfd8dc',\n    },\n  },\n  selected: {\n    color: '#cfd8dc',\n  },\n}));\n\nexport const Navigation = () => {\n  const classes = useStyles();\n\n  const [showCharacter, setShowCharacter] = useState(false);\n  const [showEpisode, setShowEpisode] = useState(false);\n  const [showLocation, setShowLocation] = useState(false);\n  const [showWatchList, setShowWatchList] = useState(true);\n\n  const [selectedSpecies, setSelectedSpecies] = useState('all');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [selectedGender, setSelectedGender] = useState('all');\n  const currentPage = 1;\n\n  const characters = useSelector((state) => state.characters);\n  const episodes = useSelector((state) => state.episodes);\n  const locations = useSelector((state) => state.locations);\n  const dispatch = useDispatch();\n\n  const LENGTH_OF_CHARACTERS = 34;\n\n  // Paginate for Characters\n  const paginateForCharacters = (pageNumber) => {\n    setSelectedStatus('all');\n    setSelectedSpecies('all');\n    setSelectedGender('all');\n    getCharacter(pageNumber)\n      .then((data) => {\n        dispatch(showCharacters(data));\n      });\n  };\n\n  // Paginate for Episode\n  const paginateForEpisodes = (pageNumber) => {\n    getEpisode(pageNumber)\n      .then((data) => {\n        dispatch(showEpisodes(data));\n      });\n  };\n\n  const paginateForLocations = (pageNumber) => {\n    getLocation(pageNumber)\n      .then((data) => {\n        dispatch(showLocations(data));\n      });\n  };\n\n  // Filter fields for Characters\n  const selectSpecies = ({ target }) => {\n    setSelectedSpecies(target.value);\n    setSelectedStatus(selectedStatus);\n    setSelectedGender(selectedGender);\n    getCharacter(currentPage)\n      .then((data) => {\n        switch (target.value) {\n          case ALL:\n            dispatch(all(data));\n            break;\n\n          case HUMAN:\n            dispatch(human(data));\n            break;\n\n          case HUMANOID:\n            dispatch(humanoid(data));\n            break;\n\n          case ALIEN:\n            dispatch(alien(data));\n            break;\n\n          case ROBOT:\n            dispatch(robot(data));\n            break;\n\n          case DISEASE:\n            dispatch(disease(data));\n            break;\n\n          case ANIMAL:\n            dispatch(animal(data));\n            break;\n\n          case POOPYBUTTHOLE:\n            dispatch(poopybutthole(data));\n            break;\n\n          default:\n            dispatch(all(data));\n            break;\n        }\n      });\n  };\n\n  const selectStatus = ({ target }) => {\n    setSelectedStatus(target.value);\n    setSelectedSpecies(selectedSpecies);\n    setSelectedGender(selectedGender);\n    getCharacter(currentPage)\n      .then((data) => {\n        switch (target.value) {\n          case ALL:\n            dispatch(all(data));\n            break;\n\n          case ALIVE:\n            dispatch(alive(data));\n            break;\n\n          case DEAD:\n            dispatch(dead(data));\n            break;\n\n          case UNKNOWN_STATUS:\n            dispatch(unknownStatus(data));\n            break;\n\n          default:\n            dispatch(all(data));\n            break;\n        }\n      });\n  };\n\n  const selectGender = ({ target }) => {\n    setSelectedGender(target.value);\n    setSelectedSpecies(selectedSpecies);\n    setSelectedStatus(selectedStatus);\n    getCharacter(currentPage)\n      .then((data) => {\n        switch (target.value) {\n          case ALL:\n            dispatch(all(data));\n            break;\n\n          case MALE:\n            dispatch(male(data));\n            break;\n\n          case FEMALE:\n            dispatch(female(data));\n            break;\n\n          case UNKNOWN_GENDER:\n            dispatch(unknownGender(data));\n            break;\n\n          default:\n            dispatch(all(data));\n            break;\n        }\n      });\n  };\n\n  const listOfCharacters = () => {\n    setShowCharacter(true);\n    setShowEpisode(false);\n    setShowLocation(false);\n    setShowWatchList(false);\n    getCharacter(currentPage)\n      .then((data) => {\n        dispatch(showCharacters(data));\n      });\n  };\n\n  const tableEpisode = () => {\n    setShowEpisode(true);\n    setShowCharacter(false);\n    setShowLocation(false);\n    setShowWatchList(false);\n    getEpisode(currentPage)\n      .then((data) => {\n        dispatch(showEpisodes(data));\n      });\n  };\n\n  const tableLocation = () => {\n    setShowLocation(true);\n    setShowEpisode(false);\n    setShowCharacter(false);\n    setShowWatchList(false);\n    getLocation(currentPage)\n      .then((data) => {\n        dispatch(showLocations(data));\n      });\n  };\n\n  const watchList = () => {\n    setShowWatchList(true);\n    setShowLocation(false);\n    setShowEpisode(false);\n    setShowCharacter(false);\n  };\n\n  return (\n    <>\n      <nav className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={`${classes.title} ${showCharacter ? classes.selected : ''}`} onClick={listOfCharacters}>\n              Characters\n            </Typography>\n            <Typography variant=\"h6\" className={`${classes.title} ${showEpisode ? classes.selected : ''}`} onClick={tableEpisode}>\n              Episodes\n            </Typography>\n            <Typography variant=\"h6\" className={`${classes.title} ${showLocation ? classes.selected : ''}`} onClick={tableLocation}>\n              Locations\n            </Typography>\n            <Typography variant=\"h6\" className={`${classes.title} ${showWatchList ? classes.selected : ''}`} onClick={watchList}>\n              My watch list\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </nav>\n      {\n        showCharacter && (\n          <div className=\"characters\">\n            <div className=\"characters__filter\">\n              <FilteredBySpecies selectedSpecies={selectedSpecies} selectSpecies={selectSpecies} />\n              <FilteredByStatus selectedStatus={selectedStatus} selectStatus={selectStatus} />\n              <FilteredByGender selectedGender={selectedGender} selectGender={selectGender} />\n            </div>\n            <Characters characters={characters} />\n\n            <Pagination pages={LENGTH_OF_CHARACTERS} paginate={paginateForCharacters} />\n          </div>\n        )\n      }\n      {\n        showEpisode && (\n          <Episodes episodes={episodes} paginate={paginateForEpisodes} />\n        )\n      }\n      {\n        showLocation && (\n          <Locations\n            locations={locations}\n            paginate={paginateForLocations}\n          />\n        )\n      }\n      {\n        showWatchList && <WatchList />\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigation } from './components/Navigation/Navigation';\n\nconst App = () => (\n  <Navigation />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}